<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<!-- Shiro的核心安全管理器接口-->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="realm" />
		<property name="cacheManager" ref="cacheManager" />
	</bean>

	<!-- 自定义的认证与授权 -->
	<bean id="realm" class="com.qiqi.account.shiro.core.Realm" />

	<!-- Web应用中,Shiro可控制的Web请求必须经过Shiro主过滤器的拦截 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- Shiro的核心安全接口,这个属性是必须的 -->
		<property name="securityManager" ref="securityManager" />
		<!-- 要求登录时的链接 -->
		<property name="loginUrl" value="/ui/login" />
		<!-- 用户访问未对其授权的资源时,所显示的连接 -->
		<property name="unauthorizedUrl" value="/unauthorized.jsp" />

		<!-- Shiro过滤链的定义 -->
		<!-- anon: 该认证拦截器表示匿名访问（即不需要登录即可访问）就是不需要走loginurl,
		           也就是不拦截该路径，一般用于静态资源过滤 -->
		<!-- authc：该认证拦截器表示需要身份认证通过后才能访问（走loginurl，在loginurl路径的方法中通过调用
		            subject.login(token)方法调用Realm类的doGetAuthenticationInfo()方法进行登录验证）-->
		<!-- roles[admin]：该授权拦截器表示需要有admin角色授权才能访问 -->
		<!-- perms["user:create"]：该授权拦截器表示需要有“user:create”权限才能访问-->
		<!-- user:该认证拦截器,用户已经身份验证/记住我登录的即可-->
		<!--以下只配置了认证拦截器，没有配置授权拦截器，不对用户进行权限访问的控制-->
		<property name="filterChainDefinitions">
			<value>
				/test=anon
				/logout = anon
				/ui/checkLogin = anon
				<!-- 过滤静态资源 如js、css、图片-->
				/public/**=anon
				/js/**=anon
				/*.ico=anon
				/webjars/**=anon
				/** = authc,user
			</value>
		</property>
	</bean>

	<!-- 缓存用户授权信息、不然每次访问都要登陆。MemoryConstrainedCacheManager是shiro自定的cacheManager类的简单实现类，
	此实现只是简单的内存缓存实现，不提供企业级功能，如缓存一致性，乐观锁定，故障转移及其他类似功能。 -->
	<bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager" />
	<!-- Shiro生命周期处理器 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
</beans>